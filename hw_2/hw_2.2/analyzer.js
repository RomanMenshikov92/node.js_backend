#!/usr/bin/env node

const fs = require("fs");
const path = require("path");

const args = process.argv.slice(2);
if (args.length === 0) {
  console.error("–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–æ–≥–æ–≤.");
  process.exit(1);
}

const logFilePath = path.resolve(args[0]);

if (!fs.existsSync(logFilePath)) {
  console.error(`–§–∞–π–ª "${logFilePath}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
  process.exit(1);
}

let totalGames = 0;
let wins = 0;

const data = fs.readFileSync(logFilePath, "utf-8");
const lines = data.split("\n");

for (const line of lines) {
  if (!line.trim()) continue;

  let entry;
  try {
    entry = JSON.parse(line);
  } catch (err) {
    console.warn("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏ –≤ –ª–æ–≥–µ:", line);
    continue;
  }

  totalGames++;
  if (entry.outcome === "win") {
    wins++;
  }
}

const losses = totalGames - wins;
const winPercent = totalGames ? ((wins / totalGames) * 100).toFixed(2) : 0;

console.log("üìä –ê–Ω–∞–ª–∏–∑ –∏–≥—Ä–æ–≤—ã—Ö –ª–æ–≥–æ–≤:");
console.log(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Ç–∏–π: ${totalGames}`);
console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥: ${wins}`);
console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä–∞–∂–µ–Ω–∏–π: ${losses}`);
console.log(`–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: ${winPercent}%`);