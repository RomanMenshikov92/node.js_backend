#!/usr/bin/env node

/**
 * @file index.js
 * –ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å http –∏ WeatherAPI.
 */
const http = require("http");
const Config = require("./config");

// ----------------------------
// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ API
// ----------------------------

/**
 * @typedef {Object} Condition
 * @property {string} text - –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏—è (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)
 * @property {string} icon - URL –∫ –∏–∫–æ–Ω–∫–µ –ø–æ–≥–æ–¥—ã
 * @property {number} code - –ö–æ–¥ –ø–æ–≥–æ–¥–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏—è
 */

/**
 * @typedef {Object} Location
 * @property {string} name - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
 * @property {string} region - –†–µ–≥–∏–æ–Ω
 * @property {string} country - –°—Ç—Ä–∞–Ω–∞
 * @property {string} localtime - –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
 */

/**
 * @typedef {Object} CurrentWeather
 * @property {string} last_updated - –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 * @property {number} temp_c - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è
 * @property {number} temp_f - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –§–∞—Ä–µ–Ω–≥–µ–π—Ç–∞
 * @property {number} is_day - 1 ‚Äî –¥–µ–Ω—å, 0 ‚Äî –Ω–æ—á—å
 * @property {Condition[]} condition - –ú–∞—Å—Å–∏–≤ –æ–ø–∏—Å–∞–Ω–∏–π –ø–æ–≥–æ–¥—ã
 * @property {number} wind_kph - –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –∫–º/—á
 * @property {string} wind_dir - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞
 * @property {number} humidity - –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
 * @property {number} feelslike_c - –û—â—É—â–∞–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ ¬∞C
 */

/**
 * @typedef {Object} WeatherApiResponse
 * @property {Location} location - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
 * @property {CurrentWeather} current - –¢–µ–∫—É—â–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */

// ----------------------------
// –ü–µ—Ä–µ–≤–æ–¥ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
// ----------------------------

/**
 * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏—è —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π.
 *
 * @param {string} text - –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
 * @returns {string} - –ü–µ—Ä–µ–≤–µ–¥—ë–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
 */
const translateCondition = (text) => {
  const translations = {
    Sunny: "–°–æ–ª–Ω–µ—á–Ω–æ",
    Clear: "–Ø—Å–Ω–æ",
    "Partly cloudy": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å",
    Cloudy: "–û–±–ª–∞—á–Ω–æ",
    Overcast: "–ü–∞—Å–º—É—Ä–Ω–æ",
    "Light rain": "–õ—ë–≥–∫–∏–π –¥–æ–∂–¥—å",
    "Moderate rain": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å",
    "Heavy rain": "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
    "Patchy light rain with thunder": "–ú–µ—Å—Ç–∞–º–∏ —Å–ª–∞–±—ã–π –¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π",
    Snow: "–°–Ω–µ–≥",
    Fog: "–¢—É–º–∞–Ω",
    Thunderstorm: "–ì—Ä–æ–∑–∞",
    Drizzle: "–ú–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å",
    "Freezing fog": "–ú–æ—Ä–æ–∑–Ω—ã–π —Ç—É–º–∞–Ω",
  };

  return translations[text] || text;
};

// ----------------------------
// –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
// ----------------------------
const city = process.argv[2] || Config.defaultCity;

const options = {
  host: new URL(Config.apiUrl).hostname,
  path: `${Config.apiVersion}/current.json?key=${Config.apiKey}&q=${encodeURIComponent(city)}`,
};

// ----------------------------
// –ó–∞–ø—Ä–æ—Å –∫ API
// ----------------------------

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å –∫ API –ø–æ–≥–æ–¥—ã –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å.
 */
const req = http.get(options, (res) => {
  let data = "";

  res.on("data", (chunk) => {
    data += chunk;
  });

  res.on("end", () => {
    try {
      /** @type {WeatherApiResponse} */
      const json = JSON.parse(data);

      if (json.error) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç API: ${json.error.message}`);
        return;
      }

      /** @type {Location} */
      const location = json.location;
      /** @type {CurrentWeather} */
      const current = json.current;

      const conditionTextRu = translateCondition(current.condition.text);

      console.log(`\nüå§  –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: ${location.name}, ${location.region}, ${location.country}`);
      console.log(`üïí –í—Ä–µ–º—è: ${location.localtime}`);
      console.log(`üå°  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${current.temp_c}¬∞C (${current.temp_f}¬∞F)`);
      console.log(`üìå –£—Å–ª–æ–≤–∏–µ: ${conditionTextRu}`);
      console.log(`üå¨  –í–µ—Ç–µ—Ä: ${current.wind_kph} –∫–º/—á (${current.wind_dir})`);
      console.log(`üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${current.humidity}%`);
      console.log(`üî• –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${current.feelslike_c}¬∞C\n`);
    } catch (e) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç:", e.message);
      console.error("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ:\n", data);
    }
  });
});

req.on("error", (e) => {
  console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${e.message}`);
});
